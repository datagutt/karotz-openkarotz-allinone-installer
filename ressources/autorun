#!/bin/bash
# ---------------------------------------------------------------------------
# 
# Karotz Auto Install Script
# 
# Author: Rodolphe Franceschi <rodolphe.franceschi@gmail.com>
# 
# Under MIT License 
# @ see http://opensource.org/licenses/MIT
#
# ---------------------------------------------------------------------------

export HOME=/tmp
export GNUPGHOME=/tmp/

CURRDIRINSTALLER="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

LED=/karotz/bin/led

function led_orange
{
  killall led
  $LED -l $ORANGE
}

function led_orange_pulse {
    killall led
    $LED -l FFA500 -p 000000 -d 700 &
}

function led_violet_pulse {
    killall led
    $LED -l FF24C5 -p 000000 -d 700 &
}

function led_blue_pulse {
    killall led
    $LED -l 5519FA -p 000000 -d 700 &
}

function led_red {
    killall led
    $LED -l ff0000
}

function led_green {
    killall led
    $LED -l 00ff00
}

function SAY {
    LD_LIBRARY_PATH=/tmp /tmp/madplay /tmp/$1.mp3 $2
}

function LOG {
    echo $(date +"%m-%d-%Y %H-%M-%S") $1 >> ${CURRDIRINSTALLER}/logautorun.txt
}

function ERROR {
    LOG "$1" 
    sync
    killall musicloop.sh
    killall madplay
    SAY "Karotz_error"
    SAY "error"
    killall led
    /karotz/bin/led -l FF0000 -b 000000 &
    exit
}

# Unpack Tools
tar -xvf ${CURRDIRINSTALLER}/tools2.tar -C /tmp/

# killall LED + Music
killall led
killall madplay

cp -r ${CURRDIRINSTALLER}/sound/*.mp3 /tmp/
ls /tmp

if [ -f ${CURRDIRINSTALLER}/updatedone ]; then
    LOG "[USBKEY] ## UPDATE ALREADY DONE"
    exit 0
fi

# Music time
SAY "Karotz_SFX_USB"
led_orange_pulse

# Override generated rootfs image
if [ ! -e "${CURRDIRINSTALLER}/rootfs.img.gz" ]; then
 echo "ERROR: Unable to find rootfs file"
 LOG "ERROR: Unable to find rootfs file"
 led_red
 SAY "error"
 exit 1
fi

if [ ! -e "${CURRDIRINSTALLER}/rootfs.img.gz.md5" ]; then
  echo "ERROR: Unable to find rootfs signature file"
  LOG "ERROR: Unable to find rootfs signature file"
  led_red
  SAY "error"
  exit 1
fi

SIGN=$(md5sum ${CURRDIRINSTALLER}/rootfs.img.gz | cut -d' ' -f1)
REF=$(cat ${CURRDIRINSTALLER}/rootfs.img.gz.md5 | cut -d' ' -f1) 

echo "Computed  MD5 :"$SIGN
echo "Reference MD5 :"$REF

if [ "$SIGN" == "$REF" ]; then
  echo "Check : Success"
  LOG "Check success"
  echo "Start Flashing"
else
  echo "Check : Failed"
  LOG "ERROR: check failed $SIGN - $REF"
  echo "Flashing Aborted"
  led_red
  SAY "error"
  exit 1
fi

LOG "Installing rootfs"

echo "Erasing Flash"
LOG "Erasing Flash"
/sbin/flash_eraseall /dev/mtd2

echo "Flashing new firmware"
LOG "Flashing Firmware"
/sbin/nandwrite -pm /dev/mtd2 ${CURRDIRINSTALLER}/rootfs.img.gz
LOG "Flashing Firmware done"

sleep 20


LOG "Web Server Configuration"
led_blue_pulse

# Configuration for HTTPD, out of rootfs
if [ ! -f /usr/httpd.conf ]; then
  LOG "Installing httpd.conf file"
  cp ${CURRDIRINSTALLER}/conf/httpd.conf /usr/
  chown root.root /usr/httpd.conf
fi

if [ ! -d /usr/www/ ]; then
  LOG "Creating /usr/www/"
  mkdir -p /usr/www/
  echo "It Works !!!" > /usr/www/index.html
  chown -R 51.51 /usr/www/
fi

sleep 10


# Installing Web App
LOG "Installing Web App"
led_violet_pulse

bash ${CURRDIRINSTALLER}/openkarotz/install

LOG "Web App installation end"
sleep 5



LOG "[USBKEY] ## All done. Rebooting."
SAY "Karotz_SFX_OK"
led_green
cd ..

LOG "TOUCHING"
touch ${CURRDIRINSTALLER}/updatedone
sleep 3

SAY "karotz_off"
echo  "::once:/sbin/reboot" >> /etc/inittab


